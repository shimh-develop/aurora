server:
  port: 4100

eureka:
  client:
    # 表示eureka client间隔多久去拉取服务注册信息，默认为30秒
    registryFetchIntervalSeconds: 30
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://aurora-eureka:2000}/eureka/
  instance:
    # 表示eureka client发送心跳给server端的频率，默认为30秒
    leaseRenewalIntervalInSeconds: 20
    # 健康检查的地址（依赖spring-boot-starter-actuator）
    health-check-url-path: /actuator/health
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

spring:
  application:
    name: aurora-portal-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    username: root
    password: 123456
    druid:
      # 初始化大小、最小、最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      # 获取连接等待超时的时间
      max-wait: 60000
      # 隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      max-evictable-idle-time-millis: 900000
      validation-query: select 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      # 1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
      # async-init: true

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  typeAliasesPackage: com.shimh.aurora.portal.service.entity
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    banner: false
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: auto

# 服务管理配置
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
info:
  app:
    name: ${spring.application.name}
    description: 用户、角色、权限微服务